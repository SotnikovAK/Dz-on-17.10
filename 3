import pygame
from pygame.draw import *
from random import randint
pygame.init()

FPS = 1
screen = pygame.display.set_mode((800, 900))

RED = (255, 0, 0)
BLUE = (0, 0, 255)
YELLOW = (255, 255, 0)
GREEN = (0, 255, 0)
MAGENTA = (255, 0, 255)
CYAN = (0, 255, 255)
BLACK = (0, 0, 0)
GREY = (127,127,127)
WHITE = (255,255,255)
COLORS = [RED, BLUE, YELLOW, GREEN, MAGENTA, CYAN]


def coordinates_new_ball():
    XY_R_color = []
    XY_R_color.append(randint(200,600))
    XY_R_color.append(randint(250,700))
    XY_R_color.append(randint(10,20))
    color = COLORS[randint(0, 5)]
    circle(screen, color, (XY_R_color[0], XY_R_color[1]), XY_R_color[2])
    XY_R_color.append(color)
    return XY_R_color

def speed_new_ball():
    
    V = []
    V.append(randint(-100,100))
    V.append(randint(-100,100))
    return V

def examination(x,y,A):
    square_r = (A[0]-x)*(A[0]-x) + (A[1]-y)*(A[1]-y)
        
    if (A[2] * A[2] >= square_r):
        if (abs(x-A[0])<= A[2] and abs(y-A[1])<= A[2] ):
            
            return 1
        else:
            return 0
    else:
        return 0
def move_balls():
    for i in range(number_of_circles):
        random_coord = [randint(200,600),randint(250,700)]
        for j in range(2):
            
            if ((coordinates_new_balls[i][j] + speed_new_balls[i][j] >= LIMIT_moves[j+2] - coordinates_new_balls[i][2]) or  (LIMIT_moves[j] + coordinates_new_balls[i][2] >= coordinates_new_balls[i][j] + speed_new_balls[i][j])):

                coordinates_new_balls[i][j] = random_coord[j]

            else:
                coordinates_new_balls[i][j] += speed_new_balls[i][j]
            
        circle(screen, coordinates_new_balls[i][3] , (coordinates_new_balls[i][0], coordinates_new_balls[i][1]), coordinates_new_balls[i][2])
        
def exterminatus_of_balls():
    for i in range(len(fl)):
        if (fl[i] == 1):
            coordinates_new_balls[i][3] = GREY
    
def background(x,y):
    
    rect(screen, GREY , (0,100,800,900))
    rect(screen, WHITE, (0,0,800,100))
    
def text(x,y,A,color,size):
    pygame.font.init()
    myfont = pygame.font.SysFont(' ', size)
    textsurface = myfont.render(A ,False, color)
    screen.blit(textsurface,(x,y))
    
pygame.display.update()
clock = pygame.time.Clock()
finished = False

LIMIT_moves = [100,100,800,900]

score = 0
time_of_life_game = 0
number_of_circles = 10

while not finished:
    clock.tick(FPS)
    background(0,0)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            finished = True
        elif event.type == pygame.MOUSEBUTTONDOWN:
            fl = []
            for i in range(number_of_circles):
                fl.append(examination(event.pos[0], event.pos[1], coordinates_new_balls[i]))
                score += examination(event.pos[0], event.pos[1], coordinates_new_balls[i])
                
            exterminatus_of_balls()
                
    if (time_of_life_game % 10 == 0):
        
        coordinates_new_balls = [coordinates_new_ball() for i in range(number_of_circles)]
        speed_new_balls = [speed_new_ball() for i in range(number_of_circles)]

    else:

        move_balls()

    text(250,50,'Level:  '+ str(time_of_life_game // 10 + )  + '  ' + 'Score: ' + str(score),BLACK,30)

    time_of_life_game += 1
    
    pygame.display.update()
    screen.fill(BLACK)

pygame.quit()

    pygame.display.update()
    screen.fill(BLACK)

pygame.quit()
